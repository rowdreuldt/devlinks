* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --text-color: white;
  --bg-url: url(./assets/bg-mobile.jpg);
  --stroke-color: rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.5);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(255, 255, 255, 0.2);
  --switch-bg-url: url(./assets/moon-stars.svg);
}

.light {
  --text-color: black;
  --bg-url: url(./assets/bg-mobile-light.jpg);
  --stroke-color: black;
  --surface-color: rgba(0, 0, 0, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(0, 0, 0, 0.1);
  --switch-bg-url: url(./assets/sun.svg);

}

body {
  /* background: color/image repeat position size
*/
  background: var(--bg-url) no-repeat top center / cover;
  /* usando o background como SHORTHAND
  background-image: url(./assets/bg-mobile.jpg);
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;
*/

  height: 100vh;
}

body * {
  font-family: 'Inter', sans-serif;
   color: var(--text-color);
}

#container {
  width: 100%;
  max-width: 580px;
  margin: 56px auto 0px auto;
  padding: 0px 24px;
}

/* profile */

#profile {
text-align: center;
padding: 24px;
}

#profile img {
  width: 112px;
  height: 112px;
  border-radius: 66px;
  border: 2px solid var(--text-color);
  size: contain;
  margin: 0 auto 0 auto;
}

/* A Imagem é originalmente display: inline; por isso, preciso transformá-la em block para que eu possa centralizar. Posso fazer isso direto pela id ou classe, ou estilizo o seu parent element, que nesse caso é o div com #profile.
*/

#profile p {
  font-weight: 500;
  font-size: 16px;
  line-height: 24px;
  margin-top: 8px;
}

/* switch */

#switch {
  position: relative;
  width: 64px;
  margin: 4px auto;
}

#switch button {
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;
  position: absolute;
  z-index: 1;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  animation: slide-out 0.3s;
  } 

  #switch button:hover {
    outline: 8px solid var(--highlight-color);
  }

  .light #switch button {
    animation: slide-in 0.3s forwards;
  }

  #switch span {
    display: block;
    width: 64px;
    height: 24px;
    background: var(--surface-color);
    border: 1px solid var(--stroke-color);
    -webkit-backdrop-filter: blur(4px);
    border-radius: 9999px;
  }

/* Links */

ul {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding: 24px 0px;
}

ul li a{
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px 24px;  
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  border-radius: 8px;
  -webkit-backdrop-filter: blur(4px);
  text-decoration: none;
  font-weight: 500;

  transition: background 0.25s;
}

/* pseudo-selector */

ul li a:hover {
  background: var(--surface-color-hover);
  border: 1px solid var(--text-color);
}

/* social links */

#social-links {
  display: flex;
  padding: 24px 0px;
  font-size: 24px;
  justify-content: center;
}

#social-links a {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;

  border-radius: 50%;
  transition: background 0.25s;
}

#social-links a:hover {
  background: var(--highlight-color);
  padding: 16px;
}

/* footer */

#footer {
  padding: 24px 0;
  text-align: center;
  font-size: 14px;
}

/* MEDIA QUERIES */

@media (min-width:700px) {

  :root {
  --bg-url: url(./assets/bg.jpg);
  } 

  .light {
  --bg-url: url(./assets/bg-light.jpg);
  }

}

/* animations */

@keyframes slide-in {
  from {
    left: 0;
  }
  to {
    left: 50%;
  }
}

@keyframes slide-out {
  from {
    left: 50%;
  }
  to {
    left: 0;
  }
}